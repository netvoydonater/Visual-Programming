{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Visual-Programming\\\\dz8\\\\my-comments-app\\\\src\\\\UsersPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DataSet from './DataSet';\nimport AddForm from './AddForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UsersPage = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedRows, setSelectedRows] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://jsonplaceholder.typicode.com/users?_limit=20');\n        if (!response.ok) throw new Error('Failed to fetch users');\n        const result = await response.json();\n        setData(result);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleAddUser = async newUser => {\n    const tempId = Date.now();\n    try {\n      const optimisticUser = {\n        ...newUser,\n        id: tempId,\n        address: {\n          city: ''\n        },\n        company: {\n          name: ''\n        }\n      };\n      setData(prev => [...prev, optimisticUser]);\n      const response = await fetch('https://jsonplaceholder.typicode.com/users', {\n        method: 'POST',\n        body: JSON.stringify(newUser),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8'\n        }\n      });\n      if (!response.ok) throw new Error('Failed to add user');\n      const serverUser = await response.json();\n      setData(prev => prev.map(u => u.id === tempId ? serverUser : u));\n    } catch (err) {\n      setError(err.message);\n      setData(prev => prev.filter(u => u.id !== tempId));\n    }\n  };\n  const handleDeleteUsers = async () => {\n    if (selectedRows.length === 0 || !window.confirm('Delete selected users?')) return;\n    const idsToDelete = selectedRows.map(index => data[index].id);\n    const originalData = [...data];\n    try {\n      setData(prev => prev.filter((_, index) => !selectedRows.includes(index)));\n      setSelectedRows([]);\n      const deletePromises = idsToDelete.map(id => fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\n        method: 'DELETE'\n      }));\n      await Promise.all(deletePromises);\n    } catch (err) {\n      setError(err.message);\n      setData(originalData);\n    }\n  };\n  const handleUpdateUser = async updatedUser => {\n    const originalData = [...data];\n    try {\n      setData(prev => prev.map(user => user.id === updatedUser.id ? updatedUser : user));\n      const response = await fetch(`https://jsonplaceholder.typicode.com/users/${updatedUser.id}`, {\n        method: 'PATCH',\n        body: JSON.stringify(updatedUser),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8'\n        }\n      });\n      if (!response.ok) throw new Error('Failed to update user');\n    } catch (err) {\n      setError(err.message);\n      setData(originalData);\n    }\n  };\n  const handleRowSelection = (rowIndex, event) => {\n    const isCtrlPressed = event.ctrlKey || event.metaKey;\n    if (isCtrlPressed) {\n      setSelectedRows(prev => prev.includes(rowIndex) ? prev.filter(index => index !== rowIndex) : [...prev, rowIndex]);\n    } else {\n      setSelectedRows(prev => prev.includes(rowIndex) ? [] : [rowIndex]);\n    }\n  };\n  const headers = [{\n    key: 'id',\n    label: 'ID'\n  }, {\n    key: 'name',\n    label: 'Name '\n  }, {\n    key: 'username',\n    label: 'Username '\n  }, {\n    key: 'email',\n    label: 'Email '\n  }, {\n    key: 'address.city',\n    label: 'City ',\n    renderCell: (_, row) => {\n      var _row$address;\n      return (_row$address = row.address) === null || _row$address === void 0 ? void 0 : _row$address.city;\n    }\n  }, {\n    key: 'company.name',\n    label: 'Company ',\n    renderCell: (_, row) => {\n      var _row$company;\n      return (_row$company = row.company) === null || _row$company === void 0 ? void 0 : _row$company.name;\n    }\n  }];\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading users...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Users Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddForm, {\n      onSubmit: handleAddUser,\n      fields: [{\n        name: 'name',\n        label: 'Name',\n        type: 'text',\n        required: true\n      }, {\n        name: 'username',\n        label: 'Username',\n        type: 'text',\n        required: true\n      }, {\n        name: 'email',\n        label: 'Email',\n        type: 'email',\n        required: true\n      }, {\n        name: 'address.city',\n        label: 'City',\n        type: 'text'\n      }, {\n        name: 'company.name',\n        label: 'Company',\n        type: 'text'\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteUsers,\n        disabled: selectedRows.length === 0,\n        className: \"delete-btn\",\n        children: [\"Delete Selected (\", selectedRows.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataSet, {\n      headers: headers,\n      data: data,\n      selectedRows: selectedRows,\n      onRowEdit: handleUpdateUser,\n      onRowSelection: handleRowSelection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(UsersPage, \"zzUCaqd4C7n09QPC1cwwUbOThj4=\");\n_c = UsersPage;\nexport default UsersPage;\nvar _c;\n$RefreshReg$(_c, \"UsersPage\");","map":{"version":3,"names":["React","useState","useEffect","DataSet","AddForm","jsxDEV","_jsxDEV","UsersPage","_s","data","setData","loading","setLoading","error","setError","selectedRows","setSelectedRows","fetchData","response","fetch","ok","Error","result","json","err","message","handleAddUser","newUser","tempId","Date","now","optimisticUser","id","address","city","company","name","prev","method","body","JSON","stringify","headers","serverUser","map","u","filter","handleDeleteUsers","length","window","confirm","idsToDelete","index","originalData","_","includes","deletePromises","Promise","all","handleUpdateUser","updatedUser","user","handleRowSelection","rowIndex","event","isCtrlPressed","ctrlKey","metaKey","key","label","renderCell","row","_row$address","_row$company","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","fields","type","required","onClick","disabled","onRowEdit","onRowSelection","_c","$RefreshReg$"],"sources":["C:/Users/Alex/Visual-Programming/dz8/my-comments-app/src/UsersPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport DataSet from './DataSet';\r\nimport AddForm from './AddForm';\r\n\r\nconst UsersPage = () => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('https://jsonplaceholder.typicode.com/users?_limit=20');\r\n        if (!response.ok) throw new Error('Failed to fetch users');\r\n        const result = await response.json();\r\n        setData(result);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleAddUser = async (newUser) => {\r\n    const tempId = Date.now();\r\n    try {\r\n      const optimisticUser = { \r\n        ...newUser, \r\n        id: tempId, \r\n        address: { city: '' }, \r\n        company: { name: '' } \r\n      };\r\n      setData(prev => [...prev, optimisticUser]);\r\n      \r\n      const response = await fetch('https://jsonplaceholder.typicode.com/users', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newUser),\r\n        headers: { 'Content-type': 'application/json; charset=UTF-8' },\r\n      });\r\n      \r\n      if (!response.ok) throw new Error('Failed to add user');\r\n      const serverUser = await response.json();\r\n      setData(prev => prev.map(u => u.id === tempId ? serverUser : u));\r\n    } catch (err) {\r\n      setError(err.message);\r\n      setData(prev => prev.filter(u => u.id !== tempId));\r\n    }\r\n  };\r\n\r\n  const handleDeleteUsers = async () => {\r\n    if (selectedRows.length === 0 || !window.confirm('Delete selected users?')) return;\r\n    const idsToDelete = selectedRows.map(index => data[index].id);\r\n    const originalData = [...data];\r\n    \r\n    try {\r\n      setData(prev => prev.filter((_, index) => !selectedRows.includes(index)));\r\n      setSelectedRows([]);\r\n      \r\n      const deletePromises = idsToDelete.map(id =>\r\n        fetch(`https://jsonplaceholder.typicode.com/users/${id}`, { method: 'DELETE' })\r\n      );\r\n      await Promise.all(deletePromises);\r\n    } catch (err) {\r\n      setError(err.message);\r\n      setData(originalData);\r\n    }\r\n  };\r\n\r\n  const handleUpdateUser = async (updatedUser) => {\r\n    const originalData = [...data];\r\n    try {\r\n      setData(prev => prev.map(user => user.id === updatedUser.id ? updatedUser : user));\r\n      \r\n      const response = await fetch(\r\n        `https://jsonplaceholder.typicode.com/users/${updatedUser.id}`,\r\n        {\r\n          method: 'PATCH',\r\n          body: JSON.stringify(updatedUser),\r\n          headers: { 'Content-type': 'application/json; charset=UTF-8' },\r\n        }\r\n      );\r\n      if (!response.ok) throw new Error('Failed to update user');\r\n    } catch (err) {\r\n      setError(err.message);\r\n      setData(originalData);\r\n    }\r\n  };\r\n\r\n  const handleRowSelection = (rowIndex, event) => {\r\n    const isCtrlPressed = event.ctrlKey || event.metaKey;\r\n    if (isCtrlPressed) {\r\n      setSelectedRows(prev =>\r\n        prev.includes(rowIndex)\r\n          ? prev.filter(index => index !== rowIndex)\r\n          : [...prev, rowIndex]\r\n      );\r\n    } else {\r\n      setSelectedRows(prev => (prev.includes(rowIndex) ? [] : [rowIndex]));\r\n    }\r\n  };\r\n\r\n  const headers = [\r\n    { key: 'id', label: 'ID' },\r\n    { key: 'name', label: 'Name ' },\r\n    { key: 'username', label: 'Username ' },\r\n    { key: 'email', label: 'Email ' },\r\n    { key: 'address.city', label: 'City ', renderCell: (_, row) => row.address?.city },\r\n    { key: 'company.name', label: 'Company ', renderCell: (_, row) => row.company?.name },\r\n  ];\r\n\r\n  if (loading) return <div className=\"loading\">Loading users...</div>;\r\n  if (error) return <div className=\"error\">Error: {error}</div>;\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <h1>Users Management</h1>\r\n      \r\n      <AddForm \r\n        onSubmit={handleAddUser} \r\n        fields={[\r\n          { name: 'name', label: 'Name', type: 'text', required: true },\r\n          { name: 'username', label: 'Username', type: 'text', required: true },\r\n          { name: 'email', label: 'Email', type: 'email', required: true },\r\n          { name: 'address.city', label: 'City', type: 'text' },\r\n          { name: 'company.name', label: 'Company', type: 'text' }\r\n        ]}\r\n      />\r\n      \r\n      <div className=\"actions\">\r\n        <button\r\n          onClick={handleDeleteUsers}\r\n          disabled={selectedRows.length === 0}\r\n          className=\"delete-btn\"\r\n        >\r\n          Delete Selected ({selectedRows.length})\r\n        </button>\r\n      </div>\r\n      \r\n      <DataSet\r\n        headers={headers}\r\n        data={data}\r\n        selectedRows={selectedRows}\r\n        onRowEdit={handleUpdateUser}\r\n        onRowSelection={handleRowSelection}\r\n      />\r\n      \r\n      {error && <div className=\"error-message\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsersPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}