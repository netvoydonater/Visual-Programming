{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Visual-Programming\\\\dz6\\\\weather-app\\\\src\\\\CitySelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./CitySelector.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CitySelector = ({\n  onCityChange,\n  currentCity\n}) => {\n  _s();\n  const [cityInput, setCityInput] = useState(currentCity);\n  const [suggestions, setSuggestions] = useState([]); // Список предложенных городов\n  const [showSuggestions, setShowSuggestions] = useState(false); // Показывать/скрывать список\n  const API_KEY = \"your_api_key_here\"; // Замените на ваш API-ключ\n\n  // Функция для получения предложений городов\n  const fetchCitySuggestions = async query => {\n    if (!query) {\n      setSuggestions([]);\n      setShowSuggestions(false);\n      return;\n    }\n    try {\n      const response = await axios.get(`http://api.openweathermap.org/geo/1.0/direct?q=${query}&limit=5&appid=${API_KEY}`);\n      setSuggestions(response.data);\n      setShowSuggestions(true);\n    } catch (error) {\n      console.error(\"Ошибка при получении предложений городов:\", error);\n      setSuggestions([]);\n      setShowSuggestions(false);\n    }\n  };\n\n  // Обработка ввода текста\n  const handleInputChange = e => {\n    const value = e.target.value;\n    setCityInput(value);\n    fetchCitySuggestions(value); // Запрашиваем предложения при каждом изменении\n  };\n\n  // Обработка выбора города из списка\n  const handleSuggestionClick = city => {\n    const cityName = `${city.name}, ${city.country}`; // Формируем название города с указанием страны\n    setCityInput(cityName);\n    setShowSuggestions(false);\n    onCityChange(cityName); // Передаём выбранный город в App\n  };\n\n  // Обработка отправки формы\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (cityInput.trim()) {\n      onCityChange(cityInput.trim());\n      setShowSuggestions(false);\n    }\n  };\n\n  // Скрытие списка при клике вне компонента\n  const handleBlur = () => {\n    setTimeout(() => setShowSuggestions(false), 200); // Задержка, чтобы успеть обработать клик по предложению\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"city-selector\",\n    onBlur: handleBlur,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: cityInput,\n        onChange: handleInputChange,\n        onFocus: () => fetchCitySuggestions(cityInput) // Показываем предложения при фокусе\n        ,\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), showSuggestions && suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"suggestions-list\",\n        children: suggestions.map((city, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleSuggestionClick(city),\n          className: \"suggestion-item\",\n          children: [city.name, \", \", city.country]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\u041F\\u043E\\u0438\\u0441\\u043A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(CitySelector, \"4FnWNfeOZ+7Z7gCl0Erz1XdYhyI=\");\n_c = CitySelector;\nexport default CitySelector;\nvar _c;\n$RefreshReg$(_c, \"CitySelector\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CitySelector","onCityChange","currentCity","_s","cityInput","setCityInput","suggestions","setSuggestions","showSuggestions","setShowSuggestions","API_KEY","fetchCitySuggestions","query","response","get","data","error","console","handleInputChange","e","value","target","handleSuggestionClick","city","cityName","name","country","handleSubmit","preventDefault","trim","handleBlur","setTimeout","onSubmit","className","onBlur","children","type","onChange","onFocus","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Alex/Visual-Programming/dz6/weather-app/src/CitySelector.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./CitySelector.css\";\r\n\r\nconst CitySelector = ({ onCityChange, currentCity }) => {\r\n  const [cityInput, setCityInput] = useState(currentCity);\r\n  const [suggestions, setSuggestions] = useState([]); // Список предложенных городов\r\n  const [showSuggestions, setShowSuggestions] = useState(false); // Показывать/скрывать список\r\n  const API_KEY = \"your_api_key_here\"; // Замените на ваш API-ключ\r\n\r\n  // Функция для получения предложений городов\r\n  const fetchCitySuggestions = async (query) => {\r\n    if (!query) {\r\n      setSuggestions([]);\r\n      setShowSuggestions(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get(\r\n        `http://api.openweathermap.org/geo/1.0/direct?q=${query}&limit=5&appid=${API_KEY}`\r\n      );\r\n      setSuggestions(response.data);\r\n      setShowSuggestions(true);\r\n    } catch (error) {\r\n      console.error(\"Ошибка при получении предложений городов:\", error);\r\n      setSuggestions([]);\r\n      setShowSuggestions(false);\r\n    }\r\n  };\r\n\r\n  // Обработка ввода текста\r\n  const handleInputChange = (e) => {\r\n    const value = e.target.value;\r\n    setCityInput(value);\r\n    fetchCitySuggestions(value); // Запрашиваем предложения при каждом изменении\r\n  };\r\n\r\n  // Обработка выбора города из списка\r\n  const handleSuggestionClick = (city) => {\r\n    const cityName = `${city.name}, ${city.country}`; // Формируем название города с указанием страны\r\n    setCityInput(cityName);\r\n    setShowSuggestions(false);\r\n    onCityChange(cityName); // Передаём выбранный город в App\r\n  };\r\n\r\n  // Обработка отправки формы\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (cityInput.trim()) {\r\n      onCityChange(cityInput.trim());\r\n      setShowSuggestions(false);\r\n    }\r\n  };\r\n\r\n  // Скрытие списка при клике вне компонента\r\n  const handleBlur = () => {\r\n    setTimeout(() => setShowSuggestions(false), 200); // Задержка, чтобы успеть обработать клик по предложению\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"city-selector\" onBlur={handleBlur}>\r\n      <div className=\"city-input-container\">\r\n        <input\r\n          type=\"text\"\r\n          value={cityInput}\r\n          onChange={handleInputChange}\r\n          onFocus={() => fetchCitySuggestions(cityInput)} // Показываем предложения при фокусе\r\n          placeholder=\"Введите город...\"\r\n        />\r\n        {showSuggestions && suggestions.length > 0 && (\r\n          <ul className=\"suggestions-list\">\r\n            {suggestions.map((city, index) => (\r\n              <li\r\n                key={index}\r\n                onClick={() => handleSuggestionClick(city)}\r\n                className=\"suggestion-item\"\r\n              >\r\n                {city.name}, {city.country}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n      <button type=\"submit\">Поиск</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CitySelector;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}